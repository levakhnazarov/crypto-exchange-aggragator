version: '3'
services:
#  mysql:
#    image: mysql:latest
#    container_name: mysql-container
#    ports:
#      - 3306:3306
#    volumes:
#      - ./run/storage/data.sql:/docker-entrypoint-initdb.d/dump.sql
#    environment:
#      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
#      MYSQL_DATABASE: ${MYSQL_DATABASE}
#      MYSQL_USER: ${MYSQL_USER}
#      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  mysql:
    image: levakhn/smartstorage:init
    networks:
      - application
#    deploy:
#      placement:
#        constraints: [node.role == manager]
#    build:
#      context: ./run/storage/
#      args:
#        - MYSQL_DATABASE=${MYSQL_DATABASE}
#        - MYSQL_USER=${MYSQL_USER}
#        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
#        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
        - "${MYSQL_PORT}:3306"
    healthcheck:
          test: mysqladmin -uroot -p1 ping
          interval: 10s
          timeout: 3s
          retries: 10
  redis:
    image: "redis:alpine"
    ports:
      - "6379"
    networks:
      - application
#    deploy:
#      placement:
#        constraints: [node.role == manager]
  app:
    image: levakhn/smartlogic:init
    networks:
      - application
#    deploy:
#      replicas: 1
#      restart_policy:
#        condition: on-failure
#      resources:
#        limits:
#          cpus: "0.1"
#          memory: 50M
#    build: .
#    volumes:
#      - .:.
    depends_on:
      - mysql
      - redis
    ports:
      - "8888:3000"
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
#    deploy:
#      placement:
#        constraints: [node.role == manager]
    networks:
      - application
networks:
  application:
